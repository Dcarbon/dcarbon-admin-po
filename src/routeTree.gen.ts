/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SigninImport } from './routes/signin'
import { Route as SetPasswordImport } from './routes/set-password'
import { Route as AuthImport } from './routes/_auth'

// Create Virtual Routes

const AuthIndexLazyImport = createFileRoute('/_auth/')()
const AuthProjectIndexLazyImport = createFileRoute('/_auth/project/')()
const AuthProjectCreateProjectLazyImport = createFileRoute(
  '/_auth/project/create-project',
)()

// Create/Update Routes

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const SetPasswordRoute = SetPasswordImport.update({
  path: '/set-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexLazyRoute = AuthIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/index.lazy').then((d) => d.Route))

const AuthProjectIndexLazyRoute = AuthProjectIndexLazyImport.update({
  path: '/project/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/project/index.lazy').then((d) => d.Route),
)

const AuthProjectCreateProjectLazyRoute =
  AuthProjectCreateProjectLazyImport.update({
    path: '/project/create-project',
    getParentRoute: () => AuthRoute,
  } as any).lazy(() =>
    import('./routes/_auth/project/create-project.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/set-password': {
      id: '/set-password'
      path: '/set-password'
      fullPath: '/set-password'
      preLoaderRoute: typeof SetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/project/create-project': {
      id: '/_auth/project/create-project'
      path: '/project/create-project'
      fullPath: '/project/create-project'
      preLoaderRoute: typeof AuthProjectCreateProjectLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/project/': {
      id: '/_auth/project/'
      path: '/project'
      fullPath: '/project'
      preLoaderRoute: typeof AuthProjectIndexLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthIndexLazyRoute,
    AuthProjectCreateProjectLazyRoute,
    AuthProjectIndexLazyRoute,
  }),
  SetPasswordRoute,
  SigninRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/set-password",
        "/signin"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/",
        "/_auth/project/create-project",
        "/_auth/project/"
      ]
    },
    "/set-password": {
      "filePath": "set-password.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/_auth/": {
      "filePath": "_auth/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/project/create-project": {
      "filePath": "_auth/project/create-project.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/project/": {
      "filePath": "_auth/project/index.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
